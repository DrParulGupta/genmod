{
    "docs": [
        {
            "location": "/", 
            "text": "Genmod\n\n\n\n  \n\n    \n\n  \n\n\n\n\n\nAnnotating and analyzing primarily genetic models in the \nVCF\n file format. \n\n\nOverview\n\n\nThe main function is to annotate \naccurate patterns of inheritance\n for each \nvariant in a vcf file including one or several families of arbitrary size. \n\n\nBy default variants will be annotated from the human refGene database but \nalternative annotations can be built with \ngenmod build\n. \n\ngenmod\n can also be used for annotating variants with their frequencies in 1000G, \nExAC or their predicted CADD scores, see \ngenmod annotate\n.\ngenmod uses multithreading to annotate variants and operates fast for both \nwhole exome data and whole genome data.\n\n\nInstallation\n\n\nGENMOD\n works with Python 2.7 and Python 3.2 and above\n\n\npip install genmod\n\n\n\nor\n\n\ngit clone https://github.com/moonso/genmod.git\ncd genmod\npython setup.py install\n\n\n\nExample:\n\n\nThe basic idea with genmod is to make fast and easy analysis of vcf variants \nfor rare disease.\nIt can still be interesting to use in other cases, such as annotating what \ngenetic regions the variants in a bacteria belongs to.\n\ngenmod\n can annotate accurate patterns of inheritance in arbitrary sized families.\nThe genetic models checked are the basic mendelian ones, these are:\n\n\n\n\nAutsomal Recessive, denoted 'AR_hom'\n\n\nAutsomal Recessive denovo, denoted 'AR_hom_dn'\n\n\nAutsomal Dominant, 'AD'\n\n\nAutsomal Dominant denovo, 'AD_dn'\n\n\nAutosomal Compound Heterozygote, 'AR_comp'\n\n\nX-linked dominant, 'XD'\n\n\nX-linked dominant de novo, 'XD_dn'\n\n\nX-linked Recessive, 'XR'\n\n\nX-linked Recessive de novo, 'XR_dn'\n\n\n\n\nThe following command should work when installed successfully. The files are distributed with the package.\n\n\n$ cat examples/test_vcf.vcf\n##fileformat=VCFv4.1\n##INFO=\nID=MQ,Number=1,Type=Float,Description=\nRMS Mapping Quality\n\n##contig=\nID=1,length=249250621,assembly=b37\n\n##reference=file:///humgen/gsa-hpprojects/GATK/bundle/current/b37/human_g1k_v37.fasta\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  father  mother  proband father_2    mother_2    proband_2\n1   879537  .   T   C   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60\n1   879541  .   G   A   100 PASS    MQ=1    GT:AD:GQ    ./. 0/1:10,10:60    1/1:10,10:60    ./. 0/1:10,10:60    0/1:10,10:60\n1   879595  .   C   T   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    1/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   879676  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    1/1:10,10:60    1/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   879911  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880012  .   A   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   880086  .   T   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880199  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880217  .   T   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154051    .   A   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154073    .   T   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154074    .   C   G   100 PASS    MQ=1    GT:AD:GQ    ./. 0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154076    .   G   C   100 PASS    MQ=1    GT:AD:GQ    ./. 0/0:10,10:60    0/1:10,10:60    ./. 0/0:10,10:60    0/1:10,10:60\nX   302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\nMT  302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\n\n$ cat examples/test_vcf.vcf |\\\n\ngenmod annotate - --annotate_regions |\\ \n\ngenmod models - --family_file examples/recessive_trio.ped \n test_vcf_models_annotated.vcf\n\n$ cat test_vcf_models_annotated.vcf\n##fileformat=VCFv4.1\n##INFO=\nID=MQ,Number=1,Type=Float,Description=\nRMS Mapping Quality\n\n##INFO=\nID=Annotation,Number=.,Type=String,Description=\nAnnotates what feature(s) this variant belongs to.\n\n##INFO=\nID=Exonic,Number=0,Type=Flag,Description=\nIndicates if the variant is exonic.\n\n##INFO=\nID=GeneticModels,Number=.,Type=String,Description=\n':'-separated list of genetic models for this variant.\n\n##INFO=\nID=ModelScore,Number=.,Type=String,Description=\nPHRED score for genotype models.\n\n##INFO=\nID=Compounds,Number=.,Type=String,Description=\nList of compound pairs for this variant.The list is splitted on ',' family id is separated with compoundswith ':'. Compounds are separated with '|'.\n\n##contig=\nID=1,length=249250621,assembly=b37\n\n##reference=file:///humgen/gsa-hpprojects/GATK/bundle/current/b37/human_g1k_v37.fasta\n##Software=\nID=genmod,Version=3.0.1,Date=\n2015-09-22 08:40\n,CommandLineOptions=\nprocesses=4 keyword=Annotation family_type=ped family_file=\nopen file 'examples/recessive_trio.ped', mode 'r' at 0x102d3a780\n variant_file=\n_io.TextIOWrapper name='\nstdin\n' encoding='utf-8'\n logger=\nlogging.Logger object at 0x102d64250\n\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  father  mother  proband father_2    mother_2    proband_2\n1   879537  .   T   C   100 PASS    MQ=1;Exonic;Annotation=SAMD11;GeneticModels=1:AR_hom;ModelScore=1:55.0  GT:AD:GQ    0/1:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60\n1   879541  .   G   A   100 PASS    MQ=1;Exonic;Annotation=SAMD11;GeneticModels=1:AR_hom_dn|AR_hom;ModelScore=1:57.0    GT:AD:GQ    ./. 0/1:10,10:60    1/1:10,10:60    ./. 0/1:10,10:60    0/1:10,10:60\n1   879595  .   C   T   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11;GeneticModels=1:AR_hom_dn;ModelScore=1:55.0 GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    1/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   879676  .   G   A   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11 GT:AD:GQ    0/1:10,10:60    1/1:10,10:60    1/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   879911  .   G   A   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11;Compounds=1:1_880086_T_C|1_880012_A_G;GeneticModels=1:AR_comp|AR_comp_dn;ModelScore=1:55.0  GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880012  .   A   G   100 PASS    MQ=1;Exonic;Annotation=NOC2L;Compounds=1:1_879911_G_A|1_880086_T_C;GeneticModels=1:AR_comp|AR_comp_dn;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   880086  .   T   C   100 PASS    MQ=1;Exonic;Annotation=NOC2L;Compounds=1:1_879911_G_A|1_880012_A_G;GeneticModels=1:AD_dn|AR_comp_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880199  .   G   A   100 PASS    MQ=1;Annotation=NOC2L;GeneticModels=1:AD_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880217  .   T   G   100 PASS    MQ=1;Annotation=NOC2L;GeneticModels=1:AD_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154051    .   A   G   100 PASS    MQ=1;Exonic;Annotation=ADK;Compounds=1:10_76154073_T_G;GeneticModels=1:AR_comp_dn;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154073    .   T   G   100 PASS    MQ=1;Exonic;Annotation=ADK;Compounds=1:10_76154051_A_G;GeneticModels=1:AD_dn|AR_comp_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154074    .   C   G   100 PASS    MQ=1;Annotation=ADK GT:AD:GQ    ./. 0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154076    .   G   C   100 PASS    MQ=1;Annotation=ADK;GeneticModels=1:AD_dn|AD;ModelScore=1:57.0  GT:AD:GQ    ./. 0/0:10,10:60    0/1:10,10:60    ./. 0/0:10,10:60    0/1:10,10:60\nX   302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1;Annotation=PPP2R3B;GeneticModels=1:XD|XR;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\nMT  302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1;GeneticModels=1:AR_hom_dn;ModelScore=1:55.0    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\n\n\n\n\ngenmod\n is made for working on any type of annotated vcf.\nTo get relevant Autosomal Compound Heterozygotes we need to know what genetic regions that the variants belong to.\nWe can use annotations from the \nVariant Effect Predictor\n \nor let \ngenmod\n do the annotation.\n\n\ngenmod\n comes with a prebuilt annotation data base that is made from the latest refSeq dataset. \nWe can also build new annotation sets with \ngenmod build\n, please see wiki for mor info.\n\n\n(There are files for testing the following commands in genmod/examples)\n\n\nTo annotate the variants with regions use\n\n\n$genmod annotate \nvcf_file\n -r/--annotate_regions (-a/--annotation_dir)\n\n\n\n\n\nNow the variants are ready to get their models annotated:\n\n\n$genmod models \nvcf_file\n -f/--family_file \nfamily.ped", 
            "title": "Home"
        }, 
        {
            "location": "/#genmod", 
            "text": "Annotating and analyzing primarily genetic models in the  VCF  file format.", 
            "title": "Genmod"
        }, 
        {
            "location": "/#overview", 
            "text": "The main function is to annotate  accurate patterns of inheritance  for each \nvariant in a vcf file including one or several families of arbitrary size.   By default variants will be annotated from the human refGene database but \nalternative annotations can be built with  genmod build .  genmod  can also be used for annotating variants with their frequencies in 1000G, \nExAC or their predicted CADD scores, see  genmod annotate .\ngenmod uses multithreading to annotate variants and operates fast for both \nwhole exome data and whole genome data.", 
            "title": "Overview"
        }, 
        {
            "location": "/#installation", 
            "text": "GENMOD  works with Python 2.7 and Python 3.2 and above  pip install genmod  or  git clone https://github.com/moonso/genmod.git\ncd genmod\npython setup.py install", 
            "title": "Installation"
        }, 
        {
            "location": "/#example", 
            "text": "The basic idea with genmod is to make fast and easy analysis of vcf variants \nfor rare disease.\nIt can still be interesting to use in other cases, such as annotating what \ngenetic regions the variants in a bacteria belongs to. genmod  can annotate accurate patterns of inheritance in arbitrary sized families.\nThe genetic models checked are the basic mendelian ones, these are:   Autsomal Recessive, denoted 'AR_hom'  Autsomal Recessive denovo, denoted 'AR_hom_dn'  Autsomal Dominant, 'AD'  Autsomal Dominant denovo, 'AD_dn'  Autosomal Compound Heterozygote, 'AR_comp'  X-linked dominant, 'XD'  X-linked dominant de novo, 'XD_dn'  X-linked Recessive, 'XR'  X-linked Recessive de novo, 'XR_dn'   The following command should work when installed successfully. The files are distributed with the package.  $ cat examples/test_vcf.vcf\n##fileformat=VCFv4.1\n##INFO= ID=MQ,Number=1,Type=Float,Description= RMS Mapping Quality \n##contig= ID=1,length=249250621,assembly=b37 \n##reference=file:///humgen/gsa-hpprojects/GATK/bundle/current/b37/human_g1k_v37.fasta\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  father  mother  proband father_2    mother_2    proband_2\n1   879537  .   T   C   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60\n1   879541  .   G   A   100 PASS    MQ=1    GT:AD:GQ    ./. 0/1:10,10:60    1/1:10,10:60    ./. 0/1:10,10:60    0/1:10,10:60\n1   879595  .   C   T   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    1/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   879676  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    1/1:10,10:60    1/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   879911  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880012  .   A   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   880086  .   T   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880199  .   G   A   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880217  .   T   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154051    .   A   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154073    .   T   G   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154074    .   C   G   100 PASS    MQ=1    GT:AD:GQ    ./. 0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154076    .   G   C   100 PASS    MQ=1    GT:AD:GQ    ./. 0/0:10,10:60    0/1:10,10:60    ./. 0/0:10,10:60    0/1:10,10:60\nX   302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\nMT  302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\n\n$ cat examples/test_vcf.vcf |\\ genmod annotate - --annotate_regions |\\  genmod models - --family_file examples/recessive_trio.ped   test_vcf_models_annotated.vcf\n\n$ cat test_vcf_models_annotated.vcf\n##fileformat=VCFv4.1\n##INFO= ID=MQ,Number=1,Type=Float,Description= RMS Mapping Quality \n##INFO= ID=Annotation,Number=.,Type=String,Description= Annotates what feature(s) this variant belongs to. \n##INFO= ID=Exonic,Number=0,Type=Flag,Description= Indicates if the variant is exonic. \n##INFO= ID=GeneticModels,Number=.,Type=String,Description= ':'-separated list of genetic models for this variant. \n##INFO= ID=ModelScore,Number=.,Type=String,Description= PHRED score for genotype models. \n##INFO= ID=Compounds,Number=.,Type=String,Description= List of compound pairs for this variant.The list is splitted on ',' family id is separated with compoundswith ':'. Compounds are separated with '|'. \n##contig= ID=1,length=249250621,assembly=b37 \n##reference=file:///humgen/gsa-hpprojects/GATK/bundle/current/b37/human_g1k_v37.fasta\n##Software= ID=genmod,Version=3.0.1,Date= 2015-09-22 08:40 ,CommandLineOptions= processes=4 keyword=Annotation family_type=ped family_file= open file 'examples/recessive_trio.ped', mode 'r' at 0x102d3a780  variant_file= _io.TextIOWrapper name=' stdin ' encoding='utf-8'  logger= logging.Logger object at 0x102d64250 \n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  father  mother  proband father_2    mother_2    proband_2\n1   879537  .   T   C   100 PASS    MQ=1;Exonic;Annotation=SAMD11;GeneticModels=1:AR_hom;ModelScore=1:55.0  GT:AD:GQ    0/1:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60\n1   879541  .   G   A   100 PASS    MQ=1;Exonic;Annotation=SAMD11;GeneticModels=1:AR_hom_dn|AR_hom;ModelScore=1:57.0    GT:AD:GQ    ./. 0/1:10,10:60    1/1:10,10:60    ./. 0/1:10,10:60    0/1:10,10:60\n1   879595  .   C   T   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11;GeneticModels=1:AR_hom_dn;ModelScore=1:55.0 GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    1/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   879676  .   G   A   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11 GT:AD:GQ    0/1:10,10:60    1/1:10,10:60    1/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   879911  .   G   A   100 PASS    MQ=1;Exonic;Annotation=NOC2L,SAMD11;Compounds=1:1_880086_T_C|1_880012_A_G;GeneticModels=1:AR_comp|AR_comp_dn;ModelScore=1:55.0  GT:AD:GQ    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880012  .   A   G   100 PASS    MQ=1;Exonic;Annotation=NOC2L;Compounds=1:1_879911_G_A|1_880086_T_C;GeneticModels=1:AR_comp|AR_comp_dn;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n1   880086  .   T   C   100 PASS    MQ=1;Exonic;Annotation=NOC2L;Compounds=1:1_879911_G_A|1_880012_A_G;GeneticModels=1:AD_dn|AR_comp_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880199  .   G   A   100 PASS    MQ=1;Annotation=NOC2L;GeneticModels=1:AD_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n1   880217  .   T   G   100 PASS    MQ=1;Annotation=NOC2L;GeneticModels=1:AD_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154051    .   A   G   100 PASS    MQ=1;Exonic;Annotation=ADK;Compounds=1:10_76154073_T_G;GeneticModels=1:AR_comp_dn;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60    0/0:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154073    .   T   G   100 PASS    MQ=1;Exonic;Annotation=ADK;Compounds=1:10_76154051_A_G;GeneticModels=1:AD_dn|AR_comp_dn;ModelScore=1:55.0   GT:AD:GQ    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60    0/0:10,10:60    0/0:10,10:60    0/1:10,10:60\n10  76154074    .   C   G   100 PASS    MQ=1;Annotation=ADK GT:AD:GQ    ./. 0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60    0/1:10,10:60\n10  76154076    .   G   C   100 PASS    MQ=1;Annotation=ADK;GeneticModels=1:AD_dn|AD;ModelScore=1:57.0  GT:AD:GQ    ./. 0/0:10,10:60    0/1:10,10:60    ./. 0/0:10,10:60    0/1:10,10:60\nX   302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1;Annotation=PPP2R3B;GeneticModels=1:XD|XR;ModelScore=1:55.0 GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60\nMT  302253  .   CCCTCCTGCCCCT   C   100 PASS    MQ=1;GeneticModels=1:AR_hom_dn;ModelScore=1:55.0    GT:AD:GQ    0/0:10,10:60    0/1:10,10:60    1/1:10,10:60    0/0:10,10:60    1/1:10,10:60    1/1:10,10:60  genmod  is made for working on any type of annotated vcf.\nTo get relevant Autosomal Compound Heterozygotes we need to know what genetic regions that the variants belong to.\nWe can use annotations from the  Variant Effect Predictor  \nor let  genmod  do the annotation.  genmod  comes with a prebuilt annotation data base that is made from the latest refSeq dataset. \nWe can also build new annotation sets with  genmod build , please see wiki for mor info.  (There are files for testing the following commands in genmod/examples)  To annotate the variants with regions use  $genmod annotate  vcf_file  -r/--annotate_regions (-a/--annotation_dir)  Now the variants are ready to get their models annotated:  $genmod models  vcf_file  -f/--family_file  family.ped", 
            "title": "Example:"
        }, 
        {
            "location": "/genetic-models/", 
            "text": "Conditions for Genetic Models\n\n\nShort explanation of genotype calls in VCF format:\n\n\nSince we only look at humans, that are diploid, the genotypes represent what we see on both alleles in a single position.\n\n0\n represents the reference sequence, \n1\n is the first of the alternative alleles, \n2\n second alternative and so on.\nIf no phasing has been done the genotype is an unordered pair on the form \nx/x\n, so \n0/1\n means that the individual is heterozygote in this given position with the reference base on one of the alleles and the first of the alternatives on the other.\n\n2/2\n means that we see the second of the alternatives on both alleles.\nSome chromosomes are only present in one copy in humans, here it is allowed to only use a single digit to show the genotype. A \n0\n would mean reference and \n1\n first of alternatives.\n\n\nIf phasing has been done the pairs are not unordered anymore and the delimiter is then changed to '|', so one can be heterozygote in two ways; \n0|1\n or \n1|0\n.\n\n\nAutosomal Recessive\n\n\nFor this model individuals can be carriers so healthy individuals can be heterozygous. Both alleles need to have the variant for an individual to be sick so a healthy individual can not be homozygous alternative and a sick individual \nhas\n to be homozygous alternative.\n\n\n\n\nAffected individuals have to be homozygous alternative (hom. alt.)\n\n\nHealthy individuals cannot be hom. alt.\n\n\nVariant is considered \nde novo\n if both parents are genotyped and do not carry the variant\n\n\nThe variants following this modell will be annotated with \nAR_hom\n, or \nAR_hom_dn\n for de novo\n\n\n\n\nAutosomal Dominant\n\n\n\n\nAffected individuals have to be heterozygous (het.)\n\n\nHealthy individuals cannot have the alternative variant\n\n\nVariant is considered \nde novo\n if both parents are genotyped and do not carry the variant\n\n\nThe variants following this modell will be annotated with \nAD\nor \nAD_dn\n\n\n\n\nSpecial Case:\n If the variant belongs to a gene that have been annotated \nwith reduced penetrance we will allow healthy carriers. (i.e. healthy individuals can be heterozygotes)\n\n\nAutosomal Compound Heterozygote\n\n\nThis model includes pairs of exonic variants that are present within the same gene.\n\nThe default behaviour of GENMOD is to look for compounds only in exonic/canonical splice sites\n.\nThe reason for this is that since some genes have huge intronic regions the data will be drowned in compound pairs.\nIf the user wants all variants in genes checked use the flag -gene/--whole_gene.\n\n\n\n\n\n\nNon-phased data:\n\n\n\n\nAffected individuals have to be het. for both variants\n\n\nHealthy individuals can be het. for one of the variants but cannot have both variants\n\n\nVariant is considered \nde novo\n if only one or no variant is found in the parents\n\n\n\n\n\n\n\n\nPhased data:\n\n\n\n\nAll affected individuals have to be het. for both variants \nand\n the variants has to be on two different alleles\n\n\nHealthy individuals can be heterozygous for one but cannot have both variants\n\n\nIf only one or no variant is found in parents it is considered \nde novo\n\n\n\n\n\n\n\n\nVariant following this patters will be annotated with \nAR_comp\n or \nAR_comp_dn\n\n\nX-Linked Dominant\n\n\nThese traits are inherited on the x-chromosome, of which men have one allele and women have two.\n\n\n\n\nVariant has to be on chromosome X\n\n\nAffected individuals have to be het. or hom. alt.\n\n\nHealthy males cannot carry the variant\n\n\nHealthy females can carry the variant (because of X inactivation)\n\n\nIf sex is male the variant is considered \nde novo\n if mother is genotyped and does not carry the variant\n\n\nIf sex is female variant is considered \nde novo\n if none of the parents carry the variant\n\n\nThe variants following this modell will be annotated with \nXD\nor \nXD_dn\n\n\n\n\nX Linked Recessive\n\n\n\n\nVariant has to be on chromosome X\n\n\nAffected males have to be het. or hom. alt. (het is theoretically not possible in males, but can occur due to Pseudo Autosomal Regions).\n\n\nHealthy males cannot carry the variant\n\n\nAffected females have to be hom. alt.\n\n\nHealthy females cannot be hom. alt.\n\n\nIf sex is male the variant is considered \nde novo\n if mother is genotyped and does not carry the variant\n\n\nIf sex is female variant is considered \nde novo\n if not both parents carry the variant\n\n\nThe variants following this modell will be annotated with \nXR\nor \nXR_dn", 
            "title": "Genetic Models"
        }, 
        {
            "location": "/genetic-models/#conditions-for-genetic-models", 
            "text": "", 
            "title": "Conditions for Genetic Models"
        }, 
        {
            "location": "/genetic-models/#short-explanation-of-genotype-calls-in-vcf-format", 
            "text": "Since we only look at humans, that are diploid, the genotypes represent what we see on both alleles in a single position. 0  represents the reference sequence,  1  is the first of the alternative alleles,  2  second alternative and so on.\nIf no phasing has been done the genotype is an unordered pair on the form  x/x , so  0/1  means that the individual is heterozygote in this given position with the reference base on one of the alleles and the first of the alternatives on the other. 2/2  means that we see the second of the alternatives on both alleles.\nSome chromosomes are only present in one copy in humans, here it is allowed to only use a single digit to show the genotype. A  0  would mean reference and  1  first of alternatives.  If phasing has been done the pairs are not unordered anymore and the delimiter is then changed to '|', so one can be heterozygote in two ways;  0|1  or  1|0 .", 
            "title": "Short explanation of genotype calls in VCF format:"
        }, 
        {
            "location": "/genetic-models/#autosomal-recessive", 
            "text": "For this model individuals can be carriers so healthy individuals can be heterozygous. Both alleles need to have the variant for an individual to be sick so a healthy individual can not be homozygous alternative and a sick individual  has  to be homozygous alternative.   Affected individuals have to be homozygous alternative (hom. alt.)  Healthy individuals cannot be hom. alt.  Variant is considered  de novo  if both parents are genotyped and do not carry the variant  The variants following this modell will be annotated with  AR_hom , or  AR_hom_dn  for de novo", 
            "title": "Autosomal Recessive"
        }, 
        {
            "location": "/genetic-models/#autosomal-dominant", 
            "text": "Affected individuals have to be heterozygous (het.)  Healthy individuals cannot have the alternative variant  Variant is considered  de novo  if both parents are genotyped and do not carry the variant  The variants following this modell will be annotated with  AD or  AD_dn   Special Case:  If the variant belongs to a gene that have been annotated \nwith reduced penetrance we will allow healthy carriers. (i.e. healthy individuals can be heterozygotes)", 
            "title": "Autosomal Dominant"
        }, 
        {
            "location": "/genetic-models/#autosomal-compound-heterozygote", 
            "text": "This model includes pairs of exonic variants that are present within the same gene. The default behaviour of GENMOD is to look for compounds only in exonic/canonical splice sites .\nThe reason for this is that since some genes have huge intronic regions the data will be drowned in compound pairs.\nIf the user wants all variants in genes checked use the flag -gene/--whole_gene.    Non-phased data:   Affected individuals have to be het. for both variants  Healthy individuals can be het. for one of the variants but cannot have both variants  Variant is considered  de novo  if only one or no variant is found in the parents     Phased data:   All affected individuals have to be het. for both variants  and  the variants has to be on two different alleles  Healthy individuals can be heterozygous for one but cannot have both variants  If only one or no variant is found in parents it is considered  de novo     Variant following this patters will be annotated with  AR_comp  or  AR_comp_dn", 
            "title": "Autosomal Compound Heterozygote"
        }, 
        {
            "location": "/genetic-models/#x-linked-dominant", 
            "text": "These traits are inherited on the x-chromosome, of which men have one allele and women have two.   Variant has to be on chromosome X  Affected individuals have to be het. or hom. alt.  Healthy males cannot carry the variant  Healthy females can carry the variant (because of X inactivation)  If sex is male the variant is considered  de novo  if mother is genotyped and does not carry the variant  If sex is female variant is considered  de novo  if none of the parents carry the variant  The variants following this modell will be annotated with  XD or  XD_dn", 
            "title": "X-Linked Dominant"
        }, 
        {
            "location": "/genetic-models/#x-linked-recessive", 
            "text": "Variant has to be on chromosome X  Affected males have to be het. or hom. alt. (het is theoretically not possible in males, but can occur due to Pseudo Autosomal Regions).  Healthy males cannot carry the variant  Affected females have to be hom. alt.  Healthy females cannot be hom. alt.  If sex is male the variant is considered  de novo  if mother is genotyped and does not carry the variant  If sex is female variant is considered  de novo  if not both parents carry the variant  The variants following this modell will be annotated with  XR or  XR_dn", 
            "title": "X Linked Recessive"
        }, 
        {
            "location": "/commands/annotate-variants/", 
            "text": "Annotate Variants\n\n\nOverview\n\n\nTo annotate the compound heterozygote model of inheritance we need to know if variants reside in the same gene.\nWith \ngenmod annotate \nfile.vcf\n -r/--annotate_regions\n each variant will be annotate with what genes they overlap and if they are exonic variants. By default the annotations that follow the package is used, these are built from the latest refSeq dataset.\nIt is possible to build a new annotation database with the \ngenmod build\n command if the user prefere other annotations.   \n\n\ngenmod annotate\n can also be used to annotate variants from different sources such as frequency databases etc.\n\n\nCommand\n\n\n$ genmod annotate --help\nUsage: genmod annotate [OPTIONS] \nvcf_file\n or -\n\n  Annotate vcf variants.\n\n  Annotate variants with a number of different sources. Please use --help\n  for more info.\n\nOptions:\n  -r, --annotate_regions     Increase output verbosity.\n  -c, --cadd_file PATH       Specify the path to a bgzipped cadd file (with\n                             index) with variant scores. This command can be\n                             used multiple times if multiple cadd files.\n  --thousand_g PATH          Specify the path to a bgzipped vcf file (with\n                             index) with 1000g variants\n  --exac PATH                Specify the path to a bgzipped vcf file (with\n                             index) with exac variants.\n  -a, --annotation_dir PATH  Specify the path to the directory where the\n                             annotation\n                             databases are.\n                             Default is the gene\n                             pred files that comes with the distribution.\n  -o, --outfile FILENAME     Specify the path to a file where results should\n                             be stored.\n  -s, --silent               Do not print the variants.\n  --cadd_raw                 If the raw cadd scores should be annotated.\n  -p, --processes INTEGER    Define how many processes that should be use for\n                             annotation.\n  --help                     Show this message and exit.", 
            "title": "Annotating Variants"
        }, 
        {
            "location": "/commands/annotate-variants/#annotate-variants", 
            "text": "", 
            "title": "Annotate Variants"
        }, 
        {
            "location": "/commands/annotate-variants/#overview", 
            "text": "To annotate the compound heterozygote model of inheritance we need to know if variants reside in the same gene.\nWith  genmod annotate  file.vcf  -r/--annotate_regions  each variant will be annotate with what genes they overlap and if they are exonic variants. By default the annotations that follow the package is used, these are built from the latest refSeq dataset.\nIt is possible to build a new annotation database with the  genmod build  command if the user prefere other annotations.     genmod annotate  can also be used to annotate variants from different sources such as frequency databases etc.", 
            "title": "Overview"
        }, 
        {
            "location": "/commands/annotate-variants/#command", 
            "text": "$ genmod annotate --help\nUsage: genmod annotate [OPTIONS]  vcf_file  or -\n\n  Annotate vcf variants.\n\n  Annotate variants with a number of different sources. Please use --help\n  for more info.\n\nOptions:\n  -r, --annotate_regions     Increase output verbosity.\n  -c, --cadd_file PATH       Specify the path to a bgzipped cadd file (with\n                             index) with variant scores. This command can be\n                             used multiple times if multiple cadd files.\n  --thousand_g PATH          Specify the path to a bgzipped vcf file (with\n                             index) with 1000g variants\n  --exac PATH                Specify the path to a bgzipped vcf file (with\n                             index) with exac variants.\n  -a, --annotation_dir PATH  Specify the path to the directory where the\n                             annotation\n                             databases are.\n                             Default is the gene\n                             pred files that comes with the distribution.\n  -o, --outfile FILENAME     Specify the path to a file where results should\n                             be stored.\n  -s, --silent               Do not print the variants.\n  --cadd_raw                 If the raw cadd scores should be annotated.\n  -p, --processes INTEGER    Define how many processes that should be use for\n                             annotation.\n  --help                     Show this message and exit.", 
            "title": "Command"
        }, 
        {
            "location": "/commands/annotate-models/", 
            "text": "Annotating Patterns of Inheritance\n\n\nBasic command\n\n\n\n$ genmod models --help\nUsage: genmod models [OPTIONS] \nvcf_file\n or -\n\n  Annotate genetic models for vcf variants.\n\n  Checks what patterns of inheritance that are followed in a VCF file. The\n  analysis is family based so each family that are specified in the family\n  file and exists in the variant file will get it's own annotation.\n\nOptions:\n Options:\n   -f, --family_file \nped_file\n\n   -t, --family_type [ped|alt|cmms|mip]\n                                   If the analysis use one of the known setups,\n                                   please specify which one.\n   -r, --reduced_penetrance \ntsv_file\n\n                                   File with gene ids that have reduced\n                                   penetrance.\n   --vep                           If variants are annotated with the Variant\n                                   Effect Predictor.\n   --phased                        If data is phased use this flag.\n   -s, --strict                    If strict model annotations should be\n                                   used(see documentation).\n   -p, --processes INTEGER         Define how many processes that should be use\n                                   for annotation.\n   --silent                        Do not print the variants.\n   -w, --whole_gene                If compounds should be checked over the\n                                   whole gene.\n   -k, --keyword TEXT              What annotation keyword that should be used\n                                   when\n                                   searching for features.\n   -o, --outfile FILENAME          Specify the path to a file where results\n                                   should be stored.\n   --help                          Show this message and exit.\n\n\n\n\n\nOverview\n\n\nThe \ngenmod models\n command is used to annotate patterns of inheritance in vcf files. \n\ngenmod\n can handle multiple families of arbitrary sizes in the same vcf.\n\nThe individuals and families to be included in the analysis is specified in \nthe family file that is given with the \n-f/--family_file\n option.\n\n\nOptions and Arguments\n\n\nvcf_file\n\n\nThis is the only mandatory argument. A proper vcf file or a stream with a vcf file is allways input\n\n\nfamily_file\n\n\nThis is a file in ped like format that describes which individuals that should be considered in the analysis and how they are related.\nThe default file format is \nped\n but there are some alternatives.\nPlease see \n-t/--family_type\n.\n\n\nfamily_type\n\n\nFamily files are usually in the ped format but there are possibilities to use ped like files.\nIf a ped file includes more columns than the first six mandatory (described \nhere\n) one may use the \nalt\n option for this parameter.\n\n\nreduced_penetrance\n\n\nSome phenotypes are known to have reduced penetrance. This means that healthy \nindividuals can carry a heterozygous variant without being affected, while others\nthat have the same variant are affected.\nWhen annotating inheritance patterns with \ngenmod\n the user can provide a tab separated \nfile where the first column describes a gene id per row.\nUse the flag \n-r/--reduced_penetrance\n to provide this file to genmod.\nGenmod will then allow healthy carriers for variants that resides in these genes when\n annotating the Autosomal Dominant inheritance pattern.\n\n\nvep\n\n\nThis flag tell genmod that the variants are annotated with the \nVariant Effect Predictor\n.\nIn this case the vep annotations will be used to determine if a compound pair is in the same gene.\n\n\nstrict\n\n\nThis flag tell genmod that the variant calls are phased. This will make it possible for more accurate compound checks.\nFor all autosomal chromosomes humans have two copies. If two variants resides on the same copy there will still be one copy that should produce \"healthy\" transcripts. \n\n\nWith phased variants \ngenmod\n can take this information into account.\n\n\nprocesses\n\n\nHow many processes should be used during the analysis. If \n-p/--processes 1\n the streaming functionality will work better for genmod since no intermediate file needs to be used, the variants will be processes line by line and printed directly.\n\n\nIf there are several processes running at the same time the variants will be printed unordered to a intermediate file that will be sorted when all variants are analyzed.\n\n\nsilent\n\n\nIf no variants or headers should be printed to screen. This is mainly for testing.\n\n\nwhole_gene\n\n\nIf variants in introns should be considered when checking compound pairs. This will lead to a huge number of compound candidates/pairs when dealing with whole genome data.\n\n\nkeyword\n\n\nThis is the keyword in the vcf info field that genmod will look for when trying to find what genes the variant is annotated with.\nDefault is \nAnnotation\n since this is the keyword used by \ngenmod annotate\n.", 
            "title": "Annotate Genetic Models"
        }, 
        {
            "location": "/commands/annotate-models/#annotating-patterns-of-inheritance", 
            "text": "", 
            "title": "Annotating Patterns of Inheritance"
        }, 
        {
            "location": "/commands/annotate-models/#basic-command", 
            "text": "$ genmod models --help\nUsage: genmod models [OPTIONS]  vcf_file  or -\n\n  Annotate genetic models for vcf variants.\n\n  Checks what patterns of inheritance that are followed in a VCF file. The\n  analysis is family based so each family that are specified in the family\n  file and exists in the variant file will get it's own annotation.\n\nOptions:\n Options:\n   -f, --family_file  ped_file \n   -t, --family_type [ped|alt|cmms|mip]\n                                   If the analysis use one of the known setups,\n                                   please specify which one.\n   -r, --reduced_penetrance  tsv_file \n                                   File with gene ids that have reduced\n                                   penetrance.\n   --vep                           If variants are annotated with the Variant\n                                   Effect Predictor.\n   --phased                        If data is phased use this flag.\n   -s, --strict                    If strict model annotations should be\n                                   used(see documentation).\n   -p, --processes INTEGER         Define how many processes that should be use\n                                   for annotation.\n   --silent                        Do not print the variants.\n   -w, --whole_gene                If compounds should be checked over the\n                                   whole gene.\n   -k, --keyword TEXT              What annotation keyword that should be used\n                                   when\n                                   searching for features.\n   -o, --outfile FILENAME          Specify the path to a file where results\n                                   should be stored.\n   --help                          Show this message and exit.", 
            "title": "Basic command"
        }, 
        {
            "location": "/commands/annotate-models/#overview", 
            "text": "The  genmod models  command is used to annotate patterns of inheritance in vcf files.  genmod  can handle multiple families of arbitrary sizes in the same vcf. \nThe individuals and families to be included in the analysis is specified in \nthe family file that is given with the  -f/--family_file  option.", 
            "title": "Overview"
        }, 
        {
            "location": "/commands/annotate-models/#options-and-arguments", 
            "text": "", 
            "title": "Options and Arguments"
        }, 
        {
            "location": "/commands/annotate-models/#vcf_file", 
            "text": "This is the only mandatory argument. A proper vcf file or a stream with a vcf file is allways input", 
            "title": "vcf_file"
        }, 
        {
            "location": "/commands/annotate-models/#family_file", 
            "text": "This is a file in ped like format that describes which individuals that should be considered in the analysis and how they are related.\nThe default file format is  ped  but there are some alternatives.\nPlease see  -t/--family_type .", 
            "title": "family_file"
        }, 
        {
            "location": "/commands/annotate-models/#family_type", 
            "text": "Family files are usually in the ped format but there are possibilities to use ped like files.\nIf a ped file includes more columns than the first six mandatory (described  here ) one may use the  alt  option for this parameter.", 
            "title": "family_type"
        }, 
        {
            "location": "/commands/annotate-models/#reduced_penetrance", 
            "text": "Some phenotypes are known to have reduced penetrance. This means that healthy \nindividuals can carry a heterozygous variant without being affected, while others\nthat have the same variant are affected.\nWhen annotating inheritance patterns with  genmod  the user can provide a tab separated \nfile where the first column describes a gene id per row.\nUse the flag  -r/--reduced_penetrance  to provide this file to genmod.\nGenmod will then allow healthy carriers for variants that resides in these genes when\n annotating the Autosomal Dominant inheritance pattern.", 
            "title": "reduced_penetrance"
        }, 
        {
            "location": "/commands/annotate-models/#vep", 
            "text": "This flag tell genmod that the variants are annotated with the  Variant Effect Predictor .\nIn this case the vep annotations will be used to determine if a compound pair is in the same gene.", 
            "title": "vep"
        }, 
        {
            "location": "/commands/annotate-models/#strict", 
            "text": "This flag tell genmod that the variant calls are phased. This will make it possible for more accurate compound checks.\nFor all autosomal chromosomes humans have two copies. If two variants resides on the same copy there will still be one copy that should produce \"healthy\" transcripts.   With phased variants  genmod  can take this information into account.", 
            "title": "strict"
        }, 
        {
            "location": "/commands/annotate-models/#processes", 
            "text": "How many processes should be used during the analysis. If  -p/--processes 1  the streaming functionality will work better for genmod since no intermediate file needs to be used, the variants will be processes line by line and printed directly.  If there are several processes running at the same time the variants will be printed unordered to a intermediate file that will be sorted when all variants are analyzed.", 
            "title": "processes"
        }, 
        {
            "location": "/commands/annotate-models/#silent", 
            "text": "If no variants or headers should be printed to screen. This is mainly for testing.", 
            "title": "silent"
        }, 
        {
            "location": "/commands/annotate-models/#whole_gene", 
            "text": "If variants in introns should be considered when checking compound pairs. This will lead to a huge number of compound candidates/pairs when dealing with whole genome data.", 
            "title": "whole_gene"
        }, 
        {
            "location": "/commands/annotate-models/#keyword", 
            "text": "This is the keyword in the vcf info field that genmod will look for when trying to find what genes the variant is annotated with.\nDefault is  Annotation  since this is the keyword used by  genmod annotate .", 
            "title": "keyword"
        }, 
        {
            "location": "/commands/filter-variants/", 
            "text": "Filter Variants\n\n\nFilter variants based on some annotation from the INFO field of a vcf file.\n\n\nExamples\n\n\ngenmod -v filter examples/test_vcf_annotated.vcf -a 1000G_freq -t 0.01\n\n\n\n\nThis command will skip all variants that have a \n1000G_freq\n \n 0.01.\nBy default all variants that lack \n1000G_freq\n will be kept, this can be modified by the \n-d/--discard\n flag.\n\n\ngenmod -v filter examples/test_vcf_annotated.vcf -a CADD -t 7 --greater --discard\n\n\n\n\nHere we will filter out all variants that have annotation \nCADD\n less than 7 and all variants that miss the \nCADD\n flag.\n\n\nCommand\n\n\n$ genmod filter --help\nUsage: genmod filter [OPTIONS] \nvcf_file\n or -\n\n  Filter vcf variants.\n\n  Filter variants based on their annotation\n\nOptions:\n  -a, --annotation TEXT   Specify the info annotation to search for. Default\n                          1000GAF\n  -t, --threshold FLOAT   Threshold for filter variants. Default 0.05\n  -d, --discard           If variants without the annotation should be\n                          discarded\n  -g, --greater           If greater than threshold should be used instead of\n                          less thatn threshold.\n  -s, --silent            Do not print the variants.\n  -o, --outfile FILENAME  Specify the path to a file where results should be\n                          stored.\n  --help                  Show this message and exit.", 
            "title": "Filter Variants"
        }, 
        {
            "location": "/commands/filter-variants/#filter-variants", 
            "text": "Filter variants based on some annotation from the INFO field of a vcf file.", 
            "title": "Filter Variants"
        }, 
        {
            "location": "/commands/filter-variants/#examples", 
            "text": "genmod -v filter examples/test_vcf_annotated.vcf -a 1000G_freq -t 0.01  This command will skip all variants that have a  1000G_freq    0.01.\nBy default all variants that lack  1000G_freq  will be kept, this can be modified by the  -d/--discard  flag.  genmod -v filter examples/test_vcf_annotated.vcf -a CADD -t 7 --greater --discard  Here we will filter out all variants that have annotation  CADD  less than 7 and all variants that miss the  CADD  flag.", 
            "title": "Examples"
        }, 
        {
            "location": "/commands/filter-variants/#command", 
            "text": "$ genmod filter --help\nUsage: genmod filter [OPTIONS]  vcf_file  or -\n\n  Filter vcf variants.\n\n  Filter variants based on their annotation\n\nOptions:\n  -a, --annotation TEXT   Specify the info annotation to search for. Default\n                          1000GAF\n  -t, --threshold FLOAT   Threshold for filter variants. Default 0.05\n  -d, --discard           If variants without the annotation should be\n                          discarded\n  -g, --greater           If greater than threshold should be used instead of\n                          less thatn threshold.\n  -s, --silent            Do not print the variants.\n  -o, --outfile FILENAME  Specify the path to a file where results should be\n                          stored.\n  --help                  Show this message and exit.", 
            "title": "Command"
        }, 
        {
            "location": "/commands/sort-variants/", 
            "text": "", 
            "title": "Sort Variants"
        }, 
        {
            "location": "/commands/build-annotation/", 
            "text": "Build new annotations with genmod\n\n\nBasic command\n\n\n$ genmod build --help\nUsage: genmod build [OPTIONS] ANNOTATION_FILE\n\n  Build a new annotation database\n\n  Build an annotation database from an annotation file.\n\nOptions:\n  -o, --outdir PATH               Specify the path to a folder where the\n                                  annotation files should be stored.\n  -t, --annotation_type [bed|ccds|gtf|gene_pred|gff]\n                                  Specify the format of the annotation file.\n  --splice_padding INTEGER        Specify the the number of bases that the\n                                  exons should be padded with. Default is 2\n                                  bases.\n  -v, --verbose                   Increase output verbosity.\n  --help                          Show this message and exit.\n\n\n\n\nOverview\n\n\nThe build command is used for building new annotations. This could be used if another gene defenition than default (refSeq) are preferred, if other regions than genes should be used to annotate compounds or if another organism than humans are used in the analysis.\nThe supported formats are \nbed, ccds, gtf, gene_pred, gff\n. Small examples for the supported formats in \nconftest.py", 
            "title": "Build References"
        }, 
        {
            "location": "/commands/build-annotation/#build-new-annotations-with-genmod", 
            "text": "", 
            "title": "Build new annotations with genmod"
        }, 
        {
            "location": "/commands/build-annotation/#basic-command", 
            "text": "$ genmod build --help\nUsage: genmod build [OPTIONS] ANNOTATION_FILE\n\n  Build a new annotation database\n\n  Build an annotation database from an annotation file.\n\nOptions:\n  -o, --outdir PATH               Specify the path to a folder where the\n                                  annotation files should be stored.\n  -t, --annotation_type [bed|ccds|gtf|gene_pred|gff]\n                                  Specify the format of the annotation file.\n  --splice_padding INTEGER        Specify the the number of bases that the\n                                  exons should be padded with. Default is 2\n                                  bases.\n  -v, --verbose                   Increase output verbosity.\n  --help                          Show this message and exit.", 
            "title": "Basic command"
        }, 
        {
            "location": "/commands/build-annotation/#overview", 
            "text": "The build command is used for building new annotations. This could be used if another gene defenition than default (refSeq) are preferred, if other regions than genes should be used to annotate compounds or if another organism than humans are used in the analysis.\nThe supported formats are  bed, ccds, gtf, gene_pred, gff . Small examples for the supported formats in  conftest.py", 
            "title": "Overview"
        }
    ]
}